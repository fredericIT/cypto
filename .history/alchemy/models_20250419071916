from sqlalchemy import Column, Integer, String, ForeignKey
from sqlalchemy.orm import relationship
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class User(Base):
    __tablename__ = 'users'

    id = Column(Integer, primary_key=True)
    full_name = Column(String(255), nullable=False)
    email = Column(String(255), nullable=False, unique=True)
    password=  Column(String(255), nullable=False, unique=True)
    kyc = relationship('KYC', back_populates='user', uselist=False, cascade='all, delete-orphan')

    def __repr__(self):
        return f"<User(id={self.id}, full_name='{self.full_name}', email='{self.email}')>"

class KYC(Base):
    __tablename__ = 'kyc'

    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, ForeignKey('users.id'), nullable=False, unique=True)
    kyc_status = Column(String(50), nullable=False)
    kyc_document = Column(String(255), nullable=True)
    document_type = Column(String(100), nullable=False)
    front_image = Column(String(255), nullable=True)
    back_image = Column(String(255), nullable=True)
    user_with_document_image = Column(String(255), nullable=True)
 
    user = relationship('User', back_populates='kyc')

    def __repr__(self):
        return f"<KYC(id={self.id}, user_id={self.user_id}, status='{self.kyc_status}')>"
